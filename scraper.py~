# scraper.py
import os
import datetime
import wget
from dotenv import load_dotenv

load_dotenv()


def download(day=None, month=None, year=None):
    today = datetime.date.today()
    if day is None:
        day = today.day
    if month is None:
        month = today.month
    if year is None:
        year = today.year

    try:
        date_obj = datetime.date(year, month, day)
    except ValueError:
        print("Invalid date")
        return None

    if date_obj.weekday() >= 5:  # weekend
        print(f"Date: {date_obj} is a weekend")
        return None

    # --- KLUCZOWA ZMIANA TUTAJ ---
    # Używamy strftime do formatowania daty, żeby zawsze mieć wiodące zera
    date_str_for_db = date_obj.strftime('%d-%m-%Y')  # Format DD-MM-YYYY np. 03-09-2025
    date_str_for_url = f"{day}-{month}-{year}"  # Strona GPW akceptuje format bez zer

    URL = os.getenv("URL")
    URL3 = os.getenv("URL3")
    filename = os.getenv("FILENAME")

    full_url = URL + date_str_for_url + URL3

    try:
        # Usuń stary plik jeśli istnieje, żeby uniknąć problemów
        if os.path.exists(filename):
            os.remove(filename)

        wget.download(full_url, filename)
        print(f"\nDownload successfully completed for date: {date_str_for_db}")
        # Zwracamy datę w poprawnym formacie DD-MM-YYYY
        return date_str_for_db
    except Exception as e:
        print("Error: ", e)
        return None  


def remove():
    filename = os.getenv("FILENAME")
    try:
        os.remove(filename)
        print(f"File {filename} has been deleted")
    except OSError as e:
        print("Error: ", e)
3